  CREATE TABLE "CUSTOMERS" 
   (	"CUSTOMER_ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"NAME" VARCHAR2(100), 
	"EMAIL" VARCHAR2(100), 
	"PHONE" VARCHAR2(20), 
	"ADDRESS" VARCHAR2(255), 
	"TOTAL_ORDERS" NUMBER DEFAULT 0, 
	"TOTAL_SPENT" NUMBER(10,2) DEFAULT 0, 
	"JOINED_ON" DATE DEFAULT SYSDATE, 
	 PRIMARY KEY ("CUSTOMER_ID")
  USING INDEX  ENABLE, 
	 UNIQUE ("EMAIL")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "DELETED_RECORDS_BACKUP" 
   (	"ID" NUMBER, 
	"TABLE_NAME" VARCHAR2(100), 
	"DELETED_ON" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"DELETED_BY" VARCHAR2(100), 
	"RECORD_DATA" VARCHAR2(1000), 
	 PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "EXPENSES" 
   (	"EXPENSE_ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"EXPENSE_TYPE" VARCHAR2(100), 
	"VENDOR_ID" NUMBER, 
	"AMOUNT" NUMBER(10,2), 
	"DESCRIPTION" VARCHAR2(255), 
	"EXPENSE_DATE" DATE DEFAULT SYSDATE, 
	 PRIMARY KEY ("EXPENSE_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "HTMLDB_PLAN_TABLE" 
   (	"STATEMENT_ID" VARCHAR2(30), 
	"PLAN_ID" NUMBER, 
	"TIMESTAMP" DATE, 
	"REMARKS" VARCHAR2(4000), 
	"OPERATION" VARCHAR2(30), 
	"OPTIONS" VARCHAR2(255), 
	"OBJECT_NODE" VARCHAR2(128), 
	"OBJECT_OWNER" VARCHAR2(128), 
	"OBJECT_NAME" VARCHAR2(128), 
	"OBJECT_ALIAS" VARCHAR2(261), 
	"OBJECT_INSTANCE" NUMBER(*,0), 
	"OBJECT_TYPE" VARCHAR2(128), 
	"OPTIMIZER" VARCHAR2(255), 
	"SEARCH_COLUMNS" NUMBER, 
	"ID" NUMBER(*,0), 
	"PARENT_ID" NUMBER(*,0), 
	"DEPTH" NUMBER(*,0), 
	"POSITION" NUMBER(*,0), 
	"COST" NUMBER(*,0), 
	"CARDINALITY" NUMBER(*,0), 
	"BYTES" NUMBER(*,0), 
	"OTHER_TAG" VARCHAR2(255), 
	"PARTITION_START" VARCHAR2(255), 
	"PARTITION_STOP" VARCHAR2(255), 
	"PARTITION_ID" NUMBER(*,0), 
	"OTHER" LONG, 
	"DISTRIBUTION" VARCHAR2(30), 
	"CPU_COST" NUMBER(*,0), 
	"IO_COST" NUMBER(*,0), 
	"TEMP_SPACE" NUMBER(*,0), 
	"ACCESS_PREDICATES" VARCHAR2(4000), 
	"FILTER_PREDICATES" VARCHAR2(4000), 
	"PROJECTION" VARCHAR2(4000), 
	"TIME" NUMBER(*,0), 
	"QBLOCK_NAME" VARCHAR2(128)
   ) ;

  CREATE TABLE "ORDERS" 
   (	"ORDER_ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"USER_ID" NUMBER, 
	"TOTAL_AMOUNT" NUMBER(10,2), 
	"ORDER_STATUS" VARCHAR2(50), 
	"PAYMENT_STATUS" VARCHAR2(50), 
	"SHIPPING_ADDRESS" VARCHAR2(255), 
	"CREATED_AT" DATE DEFAULT SYSDATE, 
	 PRIMARY KEY ("ORDER_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "OWNER" 
   (	"OWNER_ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"USERNAME" VARCHAR2(100) NOT NULL ENABLE, 
	"EMAIL" VARCHAR2(100) NOT NULL ENABLE, 
	"PASSWORD" VARCHAR2(255) NOT NULL ENABLE, 
	"CREATED_AT" DATE DEFAULT SYSDATE, 
	 PRIMARY KEY ("OWNER_ID")
  USING INDEX  ENABLE, 
	 UNIQUE ("EMAIL")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "PURCHASE_ORDERS" 
   (	"PO_ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"VENDOR_ID" NUMBER, 
	"ITEM_NAME" VARCHAR2(100), 
	"QUANTITY" NUMBER, 
	"UNIT_PRICE" NUMBER(10,2), 
	"TOTAL_PRICE" NUMBER(10,2), 
	"ORDER_DATE" DATE DEFAULT SYSDATE, 
	"STATUS" VARCHAR2(50), 
	 PRIMARY KEY ("PO_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "SALES_SUMMARY" 
   (	"SUMMARY_ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"SUMMARY_DATE" DATE, 
	"TOTAL_ORDERS" NUMBER, 
	"TOTAL_REVENUE" NUMBER(10,2), 
	"TOTAL_PROFIT" NUMBER(10,2), 
	 PRIMARY KEY ("SUMMARY_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE TABLE "VENDORS" 
   (	"VENDOR_ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"NAME" VARCHAR2(100) NOT NULL ENABLE, 
	"CONTACT_PERSON" VARCHAR2(100), 
	"PHONE" VARCHAR2(20), 
	"EMAIL" VARCHAR2(100), 
	"ADDRESS" VARCHAR2(255), 
	"GST_NUMBER" VARCHAR2(50), 
	"CREATED_AT" DATE DEFAULT SYSDATE, 
	 PRIMARY KEY ("VENDOR_ID")
  USING INDEX  ENABLE
   ) ;

  CREATE OR REPLACE EDITIONABLE TRIGGER "CUSTOMERS_BI" 
BEFORE INSERT ON customers
FOR EACH ROW
BEGIN
  IF :NEW.CUSTOMER_ID IS NULL THEN
    :NEW.CUSTOMER_ID := customers_seq.NEXTVAL;
  END IF;
END;
/
ALTER TRIGGER "CUSTOMERS_BI" ENABLE;

  ALTER TABLE "EXPENSES" ADD FOREIGN KEY ("VENDOR_ID")
	  REFERENCES "VENDORS" ("VENDOR_ID") ENABLE;

  CREATE OR REPLACE EDITIONABLE TRIGGER "EXPENSES_BI" 
BEFORE INSERT ON expenses
FOR EACH ROW
BEGIN
  IF :NEW.EXPENSE_ID IS NULL THEN
    :NEW.EXPENSE_ID := expenses_seq.NEXTVAL;
  END IF;
END;
/
ALTER TRIGGER "EXPENSES_BI" ENABLE;

  CREATE OR REPLACE EDITIONABLE TRIGGER "ORDERS_BI" 
BEFORE INSERT ON orders
FOR EACH ROW
BEGIN
  IF :NEW.ORDER_ID IS NULL THEN
    :NEW.ORDER_ID := orders_seq.NEXTVAL;
  END IF;
END;
/
ALTER TRIGGER "ORDERS_BI" ENABLE;

  ALTER TABLE "PURCHASE_ORDERS" ADD FOREIGN KEY ("VENDOR_ID")
	  REFERENCES "VENDORS" ("VENDOR_ID") ENABLE;

  CREATE OR REPLACE EDITIONABLE TRIGGER "VENDORS_BI" 
BEFORE INSERT ON vendors
FOR EACH ROW
BEGIN
  IF :NEW.VENDOR_ID IS NULL THEN
    :NEW.VENDOR_ID := vendors_seq.NEXTVAL;
  END IF;
END;
/
ALTER TRIGGER "VENDORS_BI" ENABLE;
create or replace FUNCTION authenticate_owner (
    p_username IN VARCHAR2,
    p_password IN VARCHAR2
) RETURN BOOLEAN IS
    l_stored_hash   VARCHAR2(64);
    l_entered_hash  VARCHAR2(64);
BEGIN
    -- Hash the entered password using SHA-256
    l_entered_hash := LOWER(RAWTOHEX(DBMS_CRYPTO.HASH(UTL_I18N.STRING_TO_RAW(p_password, 'AL32UTF8'), DBMS_CRYPTO.HASH_SH256)));

    -- Fetch the stored hash from the table
    SELECT password
    INTO l_stored_hash
    FROM owner
    WHERE username = p_username;

    -- Compare both hashes
    IF l_stored_hash = l_entered_hash THEN
        RETURN TRUE;
    ELSE
        RETURN FALSE;
    END IF;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RETURN FALSE;
END;
/





































  CREATE UNIQUE INDEX "SYS_C00178209104" ON "OWNER" ("OWNER_ID") 
  ;

  CREATE UNIQUE INDEX "SYS_C00178209105" ON "OWNER" ("EMAIL") 
  ;

  CREATE UNIQUE INDEX "SYS_C00178209111" ON "VENDORS" ("VENDOR_ID") 
  ;

  CREATE UNIQUE INDEX "SYS_C00178209145" ON "CUSTOMERS" ("CUSTOMER_ID") 
  ;

  CREATE UNIQUE INDEX "SYS_C00178209146" ON "CUSTOMERS" ("EMAIL") 
  ;

  CREATE UNIQUE INDEX "SYS_C00178209192" ON "EXPENSES" ("EXPENSE_ID") 
  ;

  CREATE UNIQUE INDEX "SYS_C00178209215" ON "PURCHASE_ORDERS" ("PO_ID") 
  ;

  CREATE UNIQUE INDEX "SYS_C00178209273" ON "SALES_SUMMARY" ("SUMMARY_ID") 
  ;

  CREATE UNIQUE INDEX "SYS_C00178351581" ON "ORDERS" ("ORDER_ID") 
  ;

  CREATE UNIQUE INDEX "SYS_C00178544393" ON "DELETED_RECORDS_BACKUP" ("ID") 
  ;











































































   CREATE SEQUENCE  "CUSTOMERS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

   CREATE SEQUENCE  "DELETED_RECORDS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 181 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

   CREATE SEQUENCE  "EXPENSES_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

   CREATE SEQUENCE  "ORDERS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

   CREATE SEQUENCE  "VENDORS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

   CREATE SEQUENCE  "VENDORS_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

































create or replace TRIGGER customers_bi
BEFORE INSERT ON customers
FOR EACH ROW
BEGIN
  IF :NEW.CUSTOMER_ID IS NULL THEN
    :NEW.CUSTOMER_ID := customers_seq.NEXTVAL;
  END IF;
END;
/
create or replace TRIGGER expenses_bi   
BEFORE INSERT ON expenses
FOR EACH ROW
BEGIN
  IF :NEW.EXPENSE_ID IS NULL THEN
    :NEW.EXPENSE_ID := expenses_seq.NEXTVAL;
  END IF;
END;
/
create or replace TRIGGER orders_bi
BEFORE INSERT ON orders
FOR EACH ROW
BEGIN
  IF :NEW.ORDER_ID IS NULL THEN
    :NEW.ORDER_ID := orders_seq.NEXTVAL;
  END IF;
END;
/
create or replace TRIGGER vendors_bi
BEFORE INSERT ON vendors
FOR EACH ROW
BEGIN
  IF :NEW.VENDOR_ID IS NULL THEN
    :NEW.VENDOR_ID := vendors_seq.NEXTVAL;
  END IF;
END;
/














































































































